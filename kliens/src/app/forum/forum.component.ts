// F√≥rum f≈ëoldala viselked√©s√©√©rt, m≈±k√∂d√©s√©√©rt felel≈ës js
import { Component, ViewEncapsulation, OnInit } from '@angular/core';
import { RouterModule } from '@angular/router';
import { AuthService } from '../services/auth.service';
import { CommonModule } from '@angular/common';
import { ForumService } from '../services/forum.service';

@Component({
    selector: 'app-forum',
    imports: [CommonModule, RouterModule],
    templateUrl: './forum.component.html',
    styleUrl: './forum.component.css',
    encapsulation: ViewEncapsulation.None
})
export class ForumComponent implements OnInit {
  temaSzin: string = '';
  temaSzin2: string = '';
  temaSzinN: string = '';
  temaSzinBetu: string = '';
  temaSzinHover: string = '';
  temaSzinGordulo: string = '';
  sotet: boolean = true;
  vilagos: boolean = false;
  voros: boolean = false;

  posztok: any[] = [];

  haBejelentkezett: boolean = false;
  kedveles: boolean = true;
  kikedveles: boolean = false;

  felhasznaloNev: string = '';
  szerep: number = 2;

  constructor(private authservice: AuthService, private forumService: ForumService) {}

  // Posztok bet√∂lt√©se
  posztBetoltes(): void {
    this.forumService.getPosts().subscribe(
      (response ) => {
        this.posztok = response.map((poszt: any) => ({
          ...poszt,
          // Elteltid≈ë t√°rol√°sa
          elteltIdo: this.elteltIdoSzamitasa(poszt.elkuldve),
          // Megvizsg√°lja felhaszn√°l√≥n√©v egyez√©s alapj√°n hogy a bejelentkezett felhaszn√°l√≥hoz tartozik-e az adott profil oldal. Ennek logikai √©rt√©k√©t a "sajatFelhasznalo" v√°lt√≥z√≥ban t√°rolja el.
          sajatFelhasznalo: poszt.felhasznalo === this.felhasznaloNev
          
        }));
        //console.log(this.posztok);
      },
      (error) => {
        console.error('Hiba t√∂rt√©nt a posztok bet√∂lt√©sekor:', error);
      }
    );
  }

  // Profil lek√©r√©se, a kapott lek√©r√©sb≈ël elt√°roljuk v√°ltoz√≥ban a szerepet (norm√°l felhaszn√°l√≥, admin felhaszn√°l√≥ )
  profilLekeres(): void {
    this.authservice.profilLekeres().subscribe(
      (response) => {
        this.szerep = response.felhaszn√°l√≥.szerep_id;
        //console.log(this.szerep);
      },
      (error) => {
        console.error('Hiba t√∂rt√©nt a felhaszn√°l√≥ lek√©rdez√©sekor:', error);
      }
    );
  }

  // Itt ker√ºl kisz√°mol√°sra hogy az adott poszt mennyi ideje lett l√©trehozva, mely a jelenlegi id≈ë √©s a l√©trehoz√°s idej√©b≈ël sz√°molva ker√ºl meghat√°roz√°sra benne
  elteltIdoSzamitasa(datum: string): string {
    const posztDatum = new Date(datum);
    const jelenleg = new Date();
    const masodpercekben = Math.floor((jelenleg.getTime() - posztDatum.getTime()) / 1000);

    if (masodpercekben < 60) {
      return `${masodpercekben} m√°sodperce`;

    } else if (masodpercekben < 3600) {
      return `${Math.floor(masodpercekben / 60)} perce`;

    } else if (masodpercekben < 86400) {
      return `${Math.floor(masodpercekben / 3600)} √≥r√°ja`;

    } else if (masodpercekben < 2592000) {
      return `${Math.floor(masodpercekben / 86400)} napja`;

    } else if (masodpercekben < 31536000) {
      return `${Math.floor(masodpercekben / 2592000)} h√≥napja`;

    } else {
      return `${Math.floor(masodpercekben / 31536000)} √©ve`;
    }
  }

  // Poszt kedvel√©s. Poszt kedvel√©s k√©r√©st k√ºld a backendnek a forumService-n √°t.
  kedvelesClick(postId: number) {
    // A posztok t√∂mbben megkeresi az adott posztot az azonos√≠t√≥ja (id-ja) alapj√°n, ha nem tal√°lja akkor kil√©p retun-nel
    const poszt = this.posztok.find(p => p.id === postId);
    if (!poszt) return;

    // Amennyiben megtal√°lja a kedvelte v√°ltoz√≥t igazra √°ll√≠tja a kedvel√©s megjelen√≠t√©s miatt, illetve megn√∂veli +1el a kedveles v√°ltoz√≥t hogy azonnal megjelenjen a m√≥dosul√°sa a felhaszn√°l√≥n√°l
    poszt.kedvelte = true;
    poszt.kedveles += 1;

    //  Itt k√ºldi el a k√©r√©st a forumService-n √°t
    this.forumService.likePost(postId).subscribe(
      (response) => {
        //console.log('Kedvel√©s sikeresen megt√∂rt√©nt:', response);
      },
      // Hiba eset√©n vissza√°ll√≠tja a kedvelte logikai v√°ltoz√≥t, illetve a kedveles √©rt√©k√©t
      (error) => {
        console.error('Hiba t√∂rt√©nt a kedvel√©s meger≈ës√≠t√©s√©n√©l:', error);
        poszt.kedvelte = false;
        poszt.kedveles -= 1;
      }
    );
  }

   // Poszt kikedvel√©s. Poszt kikedvel√©s k√©r√©st k√ºld a backendnek a forumService-n √°t. Ugyanaz t√∂rt√©nik, mint a kedvel√©sn√©l.
  kikedvelesClick(postId: number) {
    const poszt = this.posztok.find(p => p.id === postId);
    if (!poszt) return;

    poszt.kedvelte = false;
    poszt.kedveles -= 1;

    this.forumService.dislikePost(postId).subscribe(
      (response) => {
        //console.log('Kikedvel√©s sikeresen megt√∂rt√©nt:', response);
      },
      (error) => {
        console.error('Hiba t√∂rt√©nt a kikedvel√©s meger≈ës√≠t√©s√©n√©l:', error);
        poszt.kedvelte = true;
        poszt.kedveles += 1;
      }
    );
  }

  // Poszt URL m√°sol√°s. Az adott poszt id-ja alapj√°n m√°solja az urlt. Az alap √∫tvonalat meghat√°rozza majd a v√©gponthoz a poszt azonos√≠t√≥j√°t √°ll√≠tja be √©s ezt url v√°ltoz√≥ba t√°rolja. Majd ezt a v√°ltoz√≥t m√°solja ki a navigator.clipboard.writeText-el 
  urlMasolas(postId: number) {
    const url = `${window.location.origin}/forum/${postId}`;
    navigator.clipboard.writeText(url).then(() => {
      alert('A poszt linkje kim√°solva! üìã');
    }).catch(err => {
      console.error('Hiba t√∂rt√©nt a m√°sol√°s sor√°n:', err);
    });
  }

  // Poszt t√∂r√∂l√©s. Poszt azonos√≠t√≥ (id) alapj√°n k√ºld t√∂rl√©si k√©relmet a backendnek a forumService-n √°t, majd sikeres v√°lasz eset√©n √∫jra bet√∂lti a posztokat.
  posztTorles(postId: number){
    //console.log(postId);
    this.forumService.deletePost(postId).subscribe(
      (response) => {
        //console.log('Poszt sikeresen t√∂r√∂lve:', response);
        this.posztBetoltes();
      },
      (error) => {
        console.error('Hiba t√∂rt√©nt a poszt t√∂rl√©s√©n√©l:', error);
      }
    );
  }

  // Hozz√°ad√°sra ker√ºlnek authService observable-b≈ël a k√∂vetkez≈ë v√°ltoz√≥k: felhasznaloNev (felhaszn√°l√≥nevet t√°rolja), szerep (norm√°l felhaszn√°l√≥, vagy admin), haBejelentkezett (logikai v√°ltoz√≥ mely azt vizsg√°lja hogy bejelentkezett-e a felhaszn√°l√≥)
  // Illetve itt ker√ºl bet√∂lt√©sre/megh√≠v√°sra a posztBetoltes()
  ngOnInit() {
    this.authservice.felhasznaloNev$.subscribe(nev => {
      this.felhasznaloNev = nev;
    });
    this.authservice.szerep$.subscribe(szerep => {
      this.szerep = szerep;
    });

    this.posztBetoltes();

    this.authservice.felhBejelentkezettE$.subscribe(bejelentkezettE => {
      this.haBejelentkezett = bejelentkezettE;
    });


    // t√©ma be√°ll√≠t√°s
    this.authservice.szamSzin$.subscribe( szam => {
      if(szam === 1){
        this.sotet = true;
        this.vilagos = false;
        this.voros = false;
        this.temaSzin = 'feketeK';
        this.temaSzin2 = 'feketeK2';
        this.temaSzinN = 'feketeN';
        this.temaSzinBetu = 'feketeBetu';
        this.temaSzinHover = 'feketeH';
        this.temaSzinGordulo = 'feketeG';
      }
      else if(szam === 2){
        this.sotet = false;
        this.vilagos = true;
        this.voros = false;
        this.temaSzin = 'feherK';
        this.temaSzin2 = 'feherK2';
        this.temaSzinN = 'feherN';
        this.temaSzinBetu = 'feherBetu';
        this.temaSzinHover = 'feherH'
        this.temaSzinGordulo = 'feherG';
      }
      else if(szam === 3){
        this.sotet = false;
        this.vilagos = false;
        this.voros = true;
        this.temaSzin = 'vorosK';
        this.temaSzin2 = 'vorosK2';
        this.temaSzinN = 'vorosN';
        this.temaSzinBetu = 'vorosBetu';
        this.temaSzinHover = 'vorosH';
        this.temaSzinGordulo = 'vorosG';
      }else{
        this.sotet = true;
        this.vilagos = false;
        this.voros = false;
        this.temaSzin = 'feketeK';
        this.temaSzin2 = 'feketeK2';
        this.temaSzinN = 'feketeN';
        this.temaSzinBetu = 'feketeBetu';
        this.temaSzinHover = 'feketeH';
        this.temaSzinGordulo = 'feketeG';
      };
    });
  }
}